import { createCalculator, Command } from "../logic/Calculator";
import { useCallback, useState } from "react";
const { calculate } = createCalculator();
export const useCalculate = () => {
    const [value, setValue] = useState("0");
    const [isClearable, setIsClearable] = useState(false);
    const [selectedCommand, setSelectedCommand] = useState("");
    const onClickNumber = useCallback((input) => {
        setIsClearable(true);
        const num = calculate(input);
        setValue(num);
    }, []);
    const onCommand = useCallback((input) => {
        setSelectedCommand(input);
        const num = calculate(input);
        setValue(num);
    }, []);
    const onEqual = useCallback(() => {
        setSelectedCommand("");
        const num = calculate(Command.Equal);
        setValue(num);
    }, []);
    const onClear = () => {
        setIsClearable(false);
        setValue(calculate(Command.Clear));
    };
    const onAllClear = () => {
        setIsClearable(false);
        setSelectedCommand("");
        setValue(calculate(Command.AllClear));
    };
    return {
        value,
        isClearable,
        selectedCommand,
        onClickNumber,
        onEqual,
        onCommand,
        onClear,
        onAllClear,
    };
};
